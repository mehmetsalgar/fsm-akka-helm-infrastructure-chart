name: Terraform Create
run-name: Terraform create triggered via ${{ github.event_name }} by ${{ github.actor }}
on:
#  schedule:
#    - cron: "0 6 * * *"
  workflow_dispatch:
jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform
    env:
      TF_VAR_cluster_name: ${{ vars.GKE_CLUSTER_NAME }}
      TF_VAR_credential: ${{ secrets.GCP_CREDENTIALS }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
      - name: Terraform Init
        run: terraform init
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
      - name: Terraform Workspace
        run: terraform workspace new fsmakka_nightly
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
      - name: Terraform Plan
        run: terraform plan -input=false
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
  initialise-gke:
    permissions:
      contents: 'read'
      id-token: 'write'
    uses: mehmetsalgar/fsm-akka-github-workflows/.github/workflows/helm-install.yaml@master
    with:
      helm-command: "helm repo add strimzi https://strimzi.io/charts/
                     helm repo add elastic https://helm.elastic.co
                     helm repo add k8ssandra https://helm.k8ssandra.io/stable
                     helm repo add jetstack https://charts.jetstack.io    
                     helm repo update
                     helm install fsm-akka-strimzi strimzi/strimzi-kafka-operator --namespace strimzi-operator --create-namespace --set watchAnyNamespace=true
                     helm install elastic-operator elastic/eck-operator -n elastic-system --create-namespace
                     helm install cert-manager jetstack/cert-manager --namespace cert-manager --create-namespace --set installCRDs=true
                     helm install k8ssandra-operator k8ssandra/k8ssandra-operator -n k8ssandra-operator --create-namespace --set global.clusterScoped=true"
      cluster-name-not-normalised: "fsmakka-${{ vars.GKE_CLUSTER_NAME }}"
    secrets: inherit